AWSTemplateFormatVersion: "2010-09-09"
Description: "Rancher stack"

Parameters:
  RancherPort:
    Type: "String"
    Description: "The Rancher server port"
  RancherServerAZ:
    Type: "String"
    Description: "The Rancher server Availability Zone"
  RancherAMI:
    Type: "String"
    Description: "The Rancher server ami"
  RancherInstanceType:
    Type: "String"
    Description: "The Rancher server instnace type"
  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: "The target VPC ID"
  SubnetID:
    Type: "AWS::EC2::Subnet::Id"
    Description: "The target subnet id in az"
  KeyPair:
    Type: "String"
    Description: "The ssh access keypair"
  AgentCount:
    Type: "Number"
    Description: "The desired number of Rancher agent instances"
  MaxAgentCount:
    Type: "String"
    Description: "The max number of Rancher agent instances"
  AgentAMI:
    Type: "String"
    Description: "The Rancher agents ami"
  AgentInstanceType:
    Type: "String"
    Description: "The Agent instnace type"
Resources:
  RancherServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "rancher-server-sg"
      VpcId: { "Ref": "VpcId" }
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: { "Ref": "RancherPort" }
          ToPort: { "Ref": "RancherPort" }
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: "Name"
          Value: { "Fn::Join": ["", [ { "Ref": "AWS::StackName" }, "-rancher-server-sg" ] ] }
        - Key: "StackName"
          Value: { "Ref": "AWS::StackName" }
  RancherAgentSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "rancher-agent-sg"
      VpcId: { "Ref": "VpcId" }
      SecurityGroupIngress:
        - IpProtocol: "udp"
          FromPort: 500
          ToPort: 500
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "udp"
          FromPort: 4500
          ToPort: 4500
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "udp"
          FromPort: 4789
          ToPort: 4789
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: "Name"
          Value: { "Fn::Join": ["", [ { "Ref": "AWS::StackName" }, "-rancher-agent-sg" ] ] }
        - Key: "StackName"
          Value: { "Ref": "AWS::StackName" }
  RancherServerEc2:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: { "Ref": "RancherServerAZ" }
      ImageId: { "Ref": "RancherAMI" }
      InstanceType: { "Ref": "RancherInstanceType" }
      KeyName: { "Ref": "KeyPair" }
      SecurityGroupIds:
        - { "Ref": "RancherServerSecurityGroup" }
      SubnetId: { "Ref": "SubnetID" }
      Tags:
        - Key: "Name"
          Value: "rancher-server"
        - Key: "InventoryName"
          Value: { "Fn::Join": ["", [ { "Ref": "AWS::StackName" }, "_rancher_server" ] ] }
        - Key: "StackName"
          Value: { "Ref": "AWS::StackName" }
  RancherAgentAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier: [ { "Ref": "SubnetID" } ]
      LaunchConfigurationName: { "Ref": "RancherAgentAutoScalingLaunchConfiguration" }
      MinSize: 0
      MaxSize: { "Ref": "MaxAgentCount" }
      DesiredCapacity: { "Ref": "AgentCount" }
      Tags:
        - Key: "Name"
          Value: "rancher-agent"
          PropagateAtLaunch: "true"
        - Key: "InventoryName"
          Value: { "Fn::Join": ["", [ { "Ref": "AWS::StackName" }, "_rancher_agent" ] ] }
          PropagateAtLaunch: "true"
        - Key: "StackName"
          Value: { "Ref": "AWS::StackName" }
          PropagateAtLaunch: "true"
  RancherAgentAutoScalingLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: { "Ref": "AgentAMI" }
      InstanceType: { "Ref": "AgentInstanceType" }
      KeyName: { "Ref": "KeyPair" }
      SecurityGroups:
        - { "Ref": "RancherAgentSecurityGroup" }
# Stack Outputs
Outputs:
  RancherServerIP:
    Description: "Rancher Server IP"
    Value: { "Fn::GetAtt": [ "RancherServerEc2", "PublicIp" ] }
  RancherAgentsASG:
    Description: "Amazon Resource Name (ARN) of Todobackend Ecs Cluster"
    Value: { "Ref": "RancherAgentAutoScalingGroup" }
